{"version":3,"sources":["components/selects/Select.tsx","components/buttons/Button.tsx","components/tooltips/Tooltip.tsx","components/dropdowns/Dropdown.tsx","components/checkboxes/CheckboxList.tsx","components/Icons.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Option","Select","OptGroup","Button","Tooltip","Dropdown","CheckboxGroup","Checkbox","Group","plainOptions","defaultCheckedList","CheckboxList","useState","checkedList","setCheckedList","indeterminate","setIndeterminate","checkAll","setCheckAll","onChange","e","target","checked","style","padding","height","backgroundColor","margin","value","list","length","marginBottom","SvgIcon","memo","width","viewBox","children","className","xmlns","IconSelectArrow","color","fillRule","clipRule","d","IconVoltage","fill","IconClose","Header","Layout","Content","Title","Typography","text","App","setValue","handleChange","type","marginRight","icon","verticalAlign","marginLeft","whiteSpace","placement","title","float","buttonWidth","clear","trigger","arrowPointAtCenter","overlayClassName","display","level","placeholder","suffixIcon","allowClear","clearIcon","defaultValue","showSearch","onSearch","val","console","log","filterOption","input","option","toLowerCase","indexOf","mode","size","overlay","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.38715d6f.chunk.js","sourcesContent":["import Select, {\n  SelectProps,\n  SelectValue,\n  OptionProps,\n  OptionType,\n  LabeledValue,\n  InternalSelectProps,\n  RefSelectProps,\n} from 'antd/lib/select';\n\nimport './select.less';\n\nconst { Option, OptGroup } = Select;\n\nexport type { SelectProps, SelectValue, OptionProps, OptionType, LabeledValue, InternalSelectProps, RefSelectProps };\nexport { Option, OptGroup };\nexport default Select;\n","import Button, { ButtonGroupProps, ButtonProps, ButtonShape, ButtonSize, ButtonType } from 'antd/lib/button';\n\nimport './button.less';\n\nexport type { ButtonGroupProps, ButtonProps, ButtonShape, ButtonSize, ButtonType }\nexport default Button;\n","import Tooltip, {\n  AbstractTooltipProps,\n  AdjustOverflow,\n  TooltipAlignConfig,\n  TooltipPlacement,\n  TooltipProps,\n  TooltipPropsWithOverlay,\n  TooltipPropsWithTitle,\n  PlacementsConfig,\n} from 'antd/lib/tooltip';\n\nimport './tooltip.less';\n\nexport type {\n  AbstractTooltipProps,\n  AdjustOverflow,\n  TooltipAlignConfig,\n  TooltipPlacement,\n  TooltipProps,\n  TooltipPropsWithOverlay,\n  TooltipPropsWithTitle,\n  PlacementsConfig,\n};\nexport default Tooltip;\n","import Dropdown, { DropDownProps, DropdownButtonProps } from 'antd/lib/dropdown';\n\nimport './dropdown.less';\n\nexport type { DropDownProps, DropdownButtonProps }\nexport default Dropdown;\n","import React, { useState } from 'react';\nimport { Checkbox } from 'antd';\nimport { CheckboxValueType } from 'antd/lib/checkbox/Group';\nimport { CheckboxChangeEvent } from 'antd/lib/checkbox';\n\nconst CheckboxGroup = Checkbox.Group;\n\nconst plainOptions = ['Apple', 'Pear', 'Orange'];\nconst defaultCheckedList: CheckboxValueType[] = ['Apple', 'Orange'];\n\nconst CheckboxList = () => {\n  const [checkedList, setCheckedList] = useState(defaultCheckedList);\n  const [indeterminate, setIndeterminate] = useState(true);\n  const [checkAll, setCheckAll] = useState(false);\n\n  const onChange = (list: CheckboxValueType[]) => {\n    setCheckedList(list);\n    setIndeterminate(!!list.length && list.length < plainOptions.length);\n    setCheckAll(list.length === plainOptions.length);\n  };\n\n  const onCheckAllChange = (e: CheckboxChangeEvent) => {\n    setCheckedList(e.target.checked ? plainOptions : []);\n    setIndeterminate(false);\n    setCheckAll(e.target.checked);\n  };\n\n  return (\n    <>\n      <Checkbox indeterminate={indeterminate} onChange={onCheckAllChange} checked={checkAll} style={{ padding: '5px 16px' }}>\n        Check all\n      </Checkbox>\n      <div style={{ height: 1, backgroundColor: '#ddd', margin: '5px 0'}}/>\n      <CheckboxGroup value={checkedList} onChange={onChange} style={{ padding: '5px 16px' }}>\n        <Checkbox value='Apple'>Apple</Checkbox>\n        <div style={{ marginBottom: 7 }} />\n        <Checkbox value='Pear'>Pear</Checkbox>\n        <div style={{ marginBottom: 7 }} />\n        <Checkbox value='Orange'>Orange</Checkbox>\n      </CheckboxGroup>\n    </>\n  );\n};\n\nexport default CheckboxList;\n","import React, { memo, FC } from 'react';\n\ntype SvgProps = {\n  width: number;\n  height: number;\n  viewBox: string;\n  className?: string;\n};\nexport type IconProps = {\n  width?: number;\n  height?: number;\n  className?: string;\n  color?: string;\n};\n\nconst SvgIcon: FC<SvgProps> = memo(({ width, height, viewBox, children, className }) => (\n  <svg xmlns='http://www.w3.org/2000/svg' width={width} height={height} viewBox={viewBox} className={className}>\n    {children}\n  </svg>\n));\n\nexport const IconSelectArrow: FC<IconProps> = ({ className, color = '#141C1E' }) => (\n  <SvgIcon width={20} height={20} viewBox='0 0 20 20' className={className}>\n    <path\n      className={color}\n      fillRule='evenodd'\n      clipRule='evenodd'\n      d='M9.29289 11.2073C9.68342 11.5979 10.3166 11.5979 10.7071 11.2073L15.6061 6.30836C15.9966 5.91784 16.6298 5.91784 17.0203 6.30836L17.2929 6.58097C17.6834 6.9715 17.6834 7.60467 17.2929 7.99519L11.5181 13.7699C10.6797 14.6084 9.32031 14.6084 8.48186 13.7699L2.70711 7.99519C2.31658 7.60466 2.31658 6.9715 2.70711 6.58097L2.97972 6.30836C3.37024 5.91784 4.00341 5.91784 4.39393 6.30836L9.29289 11.2073Z'\n    />\n  </SvgIcon>\n);\nexport const IconVoltage: FC<IconProps> = ({ className, color = 'white' }) => (\n  <SvgIcon width={20} height={20} viewBox='0 0 20 20' className={className}>\n    <path\n      fill={color}\n      className={color}\n      d='M9.84945 1.30373C10.0346 1.02369 10.3478 0.855225 10.6835 0.855225C11.278 0.855225 11.7412 1.3708 11.6776 1.96186L11.1418 6.94946C11.11 7.24501 11.3416 7.50283 11.6388 7.50287L15.6462 7.50347C16.4437 7.50359 16.9202 8.39137 16.4795 9.05603L10.0829 18.7045C9.90064 18.9795 9.59272 19.1448 9.26285 19.1448C8.67834 19.1448 8.22272 18.6382 8.28443 18.057L8.88134 12.4348L4.35141 12.4354C3.55444 12.4355 3.07759 11.5488 3.51705 10.884L9.84945 1.30373ZM9.18667 6.71347C9.21315 6.45381 8.87403 6.33239 8.72968 6.54984L6.65684 9.67225C6.43622 10.0046 6.6745 10.4488 7.07341 10.4488H10.5107C10.8071 10.4488 11.0385 10.7052 11.0081 11L10.7792 13.2228C10.7525 13.4826 11.0918 13.6042 11.2362 13.3866L13.307 10.2663C13.5276 9.93398 13.2892 9.48983 12.8903 9.48986L9.45712 9.49009C9.1609 9.49011 8.92961 9.23405 8.95966 8.93936L9.18667 6.71347Z'\n    />\n  </SvgIcon>\n);\nexport const IconClose: FC<IconProps> = ({ className, color = '#141C1E' }) => (\n  <SvgIcon width={20} height={20} viewBox='0 0 20 20' className={className}>\n    <path\n      d='M15 6.28378L13.7162 5L10 8.70243L6.28378 5L5 6.28378L8.70243 10L5 13.7162L6.28378 15L10 11.2976L13.7162 15L15 13.7162L11.2976 10L15 6.28378Z'\n      fill={color}\n    />\n    <path\n      fillRule='evenodd'\n      clipRule='evenodd'\n      d='M16.1577 2.38149L10.5221 8.01715C10.291 8.24767 9.91763 8.24767 9.68711 8.01715L3.84285 2.17289C3.61233 1.94237 3.23839 1.94237 3.00787 2.17289L2.17289 3.00787C1.94237 3.23839 1.94237 3.61173 2.17289 3.84285L8.01715 9.68711C8.24767 9.91763 8.24767 10.291 8.01715 10.5221L2.38149 16.1572C2.15097 16.3877 2.15097 16.7616 2.38149 16.9921L3.21647 17.8271C3.44699 18.0576 3.82092 18.0576 4.05145 17.8271L9.68711 12.1914C9.91763 11.9609 10.291 11.9609 10.5221 12.1914L15.9486 17.6185C16.1791 17.849 16.553 17.849 16.7835 17.6185L17.6185 16.7835C17.849 16.553 17.849 16.1791 17.6185 15.9486L12.1914 10.5221C11.9609 10.291 11.9609 9.91763 12.1914 9.68711L17.8271 4.05145C18.0576 3.82092 18.0576 3.44699 17.8271 3.21647L16.9921 2.38149C16.7616 2.15097 16.3883 2.15097 16.1577 2.38149Z'\n      fill={color}\n    />\n  </SvgIcon>\n);\n","import React, { useState } from 'react';\nimport { Layout, Typography, Divider, Space } from 'antd';\n\nimport './App.less';\n\nimport Select, { Option, SelectValue } from './components/selects/Select';\nimport Button from './components/buttons/Button';\nimport Tooltip from './components/tooltips/Tooltip';\nimport Dropdown from './components/dropdowns/Dropdown';\nimport CheckboxList from './components/checkboxes/CheckboxList';\nimport { IconSelectArrow, IconVoltage, IconClose } from './components/Icons';\n\nconst { Header, Content } = Layout;\nconst { Title } = Typography;\nconst text = 'This is a custom positioned tooltip';\nconst buttonWidth = 70;\n\nfunction App() {\n  const [value, setValue] = useState<SelectValue>('');\n\n  const handleChange = (value: SelectValue) => {\n    setValue(value);\n  };\n\n  return (\n    <Layout>\n      <Header>Header</Header>\n      <Content style={{ padding: 50 }}>\n        <Title style={{ marginBottom: 30 }}>Buttons</Title>\n        <Button type='primary' style={{ marginRight: 30 }}>\n          Primary\n        </Button>\n        <Button type='primary' icon={<IconVoltage className='ant-btn_icon' />} style={{ marginRight: 30 }}>\n          Primary\n        </Button>\n        <Button type='primary' style={{ marginRight: 30 }}>\n          Primary\n          <IconVoltage className='ant-btn_icon__suffix' />\n        </Button>\n        <Button\n          type='primary'\n          icon={<IconVoltage className='ant-btn_icon__single' />}\n          style={{ marginRight: 30, verticalAlign: 'top' }}\n        ></Button>\n        <div style={{ marginBottom: 30 }} />\n        <Button style={{ marginRight: 30 }}>Secondary</Button>\n        <Button icon={<IconVoltage className='ant-btn_icon' color='#666C77' />} style={{ marginRight: 30 }}>\n          Secondary\n        </Button>\n        <Button style={{ marginRight: 30 }}>\n          Secondary\n          <IconVoltage className='ant-btn_icon__suffix' color='#666C77' />\n        </Button>\n        <Button\n          icon={<IconVoltage className='ant-btn_icon__single' color='#666C77' />}\n          style={{ marginRight: 30, verticalAlign: 'top' }}\n        ></Button>\n        <Divider />\n        <Title style={{ marginBottom: 30 }}>Tooltips</Title>\n        <div className='demo'>\n          <div style={{ marginLeft: buttonWidth, whiteSpace: 'nowrap' }}>\n            <Tooltip placement='topLeft' title={text}>\n              <Button>TL</Button>\n            </Tooltip>\n            <Tooltip placement='top' title={text}>\n              <Button>Top</Button>\n            </Tooltip>\n            <Tooltip placement='topRight' title={text}>\n              <Button>TR</Button>\n            </Tooltip>\n          </div>\n          <div style={{ width: buttonWidth, float: 'left' }}>\n            <Tooltip placement='leftTop' title={text}>\n              <Button>LT</Button>\n            </Tooltip>\n            <Tooltip placement='left' title={text}>\n              <Button>Left</Button>\n            </Tooltip>\n            <Tooltip placement='leftBottom' title={text}>\n              <Button>LB</Button>\n            </Tooltip>\n          </div>\n          <div style={{ width: buttonWidth, marginLeft: buttonWidth * 4 + 24 }}>\n            <Tooltip placement='rightTop' title={text}>\n              <Button>RT</Button>\n            </Tooltip>\n            <Tooltip placement='right' title={text}>\n              <Button>Right</Button>\n            </Tooltip>\n            <Tooltip placement='rightBottom' title={text}>\n              <Button>RB</Button>\n            </Tooltip>\n          </div>\n          <div style={{ marginLeft: buttonWidth, clear: 'both', whiteSpace: 'nowrap' }}>\n            <Tooltip placement='bottomLeft' title={text}>\n              <Button>BL</Button>\n            </Tooltip>\n            <Tooltip placement='bottom' title={text}>\n              <Button>Bottom</Button>\n            </Tooltip>\n            <Tooltip placement='bottomRight' title={text}>\n              <Button>BR</Button>\n            </Tooltip>\n          </div>\n        </div>\n        <Divider />\n        <Tooltip title='prompt text' trigger='click'>\n          <Button\n            type='primary'\n            icon={<IconVoltage className='ant-btn_icon__single' />}\n            style={{ marginRight: 30, verticalAlign: 'top' }}\n          ></Button>\n        </Tooltip>\n        <Tooltip\n          placement='topRight'\n          arrowPointAtCenter\n          title='This is maximum heigh and width top positioned tooltip. Padding 10px from eachside, not including triangle.'\n        >\n          <Button\n            type='primary'\n            icon={<IconVoltage className='ant-btn_icon__single' />}\n            style={{ float: 'right', verticalAlign: 'top' }}\n          ></Button>\n        </Tooltip>\n        <Tooltip\n          title='long explanation of short text'\n          color='white'\n          trigger='click'\n          overlayClassName='ant-tooltip__light'\n        >\n          <Button\n            type='primary'\n            icon={<IconVoltage className='ant-btn_icon__single' />}\n            style={{ verticalAlign: 'top' }}\n          ></Button>\n        </Tooltip>\n        <Divider />\n        <Tooltip title='long explanation of short text'>\n          <span style={{ display: 'inline-block', marginRight: 50 }}>short text</span>\n        </Tooltip>\n        <Tooltip title='long explanation of short text' color='white' overlayClassName='ant-tooltip__light'>\n          <span style={{ display: 'inline-block', marginRight: 50 }}>short text</span>\n        </Tooltip>\n        <Divider />\n        <Title style={{ marginBottom: 30 }}>Selects</Title>\n        <Title level={3} style={{ marginBottom: 30 }}>\n          Single Selects\n        </Title>\n        <Select\n          style={{ width: 240, marginBottom: 30, marginRight: 30 }}\n          onChange={handleChange}\n          placeholder='Select a person'\n          suffixIcon={<IconSelectArrow />}\n        >\n          <Option value='jack'>Jack</Option>\n          <Option value='lucy'>Lucy</Option>\n          <Option value='disabled'>Disabled</Option>\n          <Option value='Yiminghe'>yiminghe</Option>\n        </Select>\n        <Select\n          style={{ width: 240, marginBottom: 30, marginRight: 30 }}\n          allowClear\n          clearIcon={<IconClose />}\n          onChange={handleChange}\n          placeholder='Select a person'\n          suffixIcon={<IconSelectArrow />}\n        >\n          <Option value='jack'>Jack</Option>\n          <Option value='lucy'>Lucy</Option>\n          <Option value='disabled'>Disabled</Option>\n          <Option value='Yiminghe'>yiminghe</Option>\n        </Select>\n        <Select\n          style={{ width: 240, marginBottom: 30, marginRight: 30 }}\n          allowClear\n          clearIcon={<IconClose />}\n          onChange={handleChange}\n          placeholder='Select a person'\n          suffixIcon={<IconSelectArrow />}\n          defaultValue='Yiminghe'\n        >\n          <Option value='jack'>Jack</Option>\n          <Option value='lucy'>Lucy</Option>\n          <Option value='disabled'>Disabled</Option>\n          <Option value='Yiminghe'>yiminghe</Option>\n        </Select>\n        <Select\n          style={{ width: 240, marginBottom: 30, marginRight: 30 }}\n          allowClear\n          clearIcon={<IconClose />}\n          onChange={handleChange}\n          placeholder='Select a person'\n          suffixIcon={<IconSelectArrow />}\n          showSearch\n          onSearch={(val) => console.log(val)}\n          filterOption={(input, option) => option!.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n        >\n          <Option value='jack'>Jack</Option>\n          <Option value='lucy'>Lucy</Option>\n          <Option value='disabled'>Disabled</Option>\n          <Option value='Yiminghe'>yiminghe</Option>\n          <Option value='Yiminghe1'>yiminghe 1</Option>\n          <Option value='Yiminghe2'>yiminghe 2</Option>\n          <Option value='Yiminghe3'>yiminghe 3</Option>\n          <Option value='Yiminghe4'>yiminghe 4</Option>\n        </Select>\n        <Divider />\n        <Title level={3} style={{ marginBottom: 30 }}>\n          Multiple Selects\n        </Title>\n        <Select\n          style={{ width: 240, marginBottom: 30, marginRight: 30 }}\n          onChange={handleChange}\n          placeholder='Select a person'\n          suffixIcon={<IconSelectArrow />}\n          mode='multiple'\n        >\n          <Option value='jack'>Jack</Option>\n          <Option value='lucy'>Lucy</Option>\n          <Option value='disabled'>Disabled</Option>\n          <Option value='Yiminghe'>yiminghe</Option>\n        </Select>\n        <Select\n          style={{ width: 240, marginBottom: 30, marginRight: 30 }}\n          allowClear\n          onChange={handleChange}\n          placeholder='Select a person'\n          suffixIcon={<IconSelectArrow />}\n          mode='multiple'\n          clearIcon={<IconClose />}\n          defaultValue={['jack', 'lucy']}\n        >\n          <Option value='jack'>Jack</Option>\n          <Option value='lucy'>Lucy</Option>\n          <Option value='disabled'>Disabled</Option>\n          <Option value='Yiminghe'>yiminghe</Option>\n        </Select>\n        <Select\n          style={{ width: 240, marginBottom: 30, marginRight: 30 }}\n          allowClear\n          onChange={handleChange}\n          placeholder='Select a person'\n          suffixIcon={<IconSelectArrow />}\n          mode='multiple'\n          clearIcon={<IconClose />}\n        >\n          <Option value='jack'>Jack</Option>\n          <Option value='lucy'>Lucy</Option>\n          <Option value='disabled'>Disabled</Option>\n          <Option value='Yiminghe'>yiminghe</Option>\n        </Select>\n        <Divider />\n        <Title style={{ marginBottom: 30 }}>Dropdowns</Title>\n        <Space size='large'>\n          <Dropdown overlay={<CheckboxList />} placement='bottomLeft' trigger={['click']}>\n            <Button>Sort: by something</Button>\n          </Dropdown>\n          <Dropdown overlay={<CheckboxList />} placement='bottomLeft'>\n            <Button\n              type='primary'\n              icon={<IconVoltage className='ant-btn_icon__single' />}\n              style={{ marginRight: 30, verticalAlign: 'top' }}\n            ></Button>\n          </Dropdown>\n        </Space>\n      </Content>\n    </Layout>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}